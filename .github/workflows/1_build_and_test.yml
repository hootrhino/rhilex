name: 构建测试

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      # 缓存 Go 模块
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 安装系统依赖
      - name: Install system dependencies
        run: |
          sudo apt update -y
          sudo apt install jq cloc protobuf-compiler \
               gcc-mingw-w64-x86-64 \
               gcc-arm-linux-gnueabi \
               gcc-mips-linux-gnu \
               gcc-mingw-w64 \
               gcc-aarch64-linux-gnu -y

      # 创建目录并写入文件
      - name: Create directory and write file
        run: |
          mkdir -p ./component/apiserver/server/www
          echo "hello" > ./component/apiserver/server/www/index.html

      # 获取 Go 依赖
      - name: Get Go dependencies
        run: |
          go get
          go get -t github.com/hootrhino/rhilex/test

      # 克隆 gocv 并安装
      - name: Clone and install gocv
        run: |
          git clone https://github.com/hybridgroup/gocv.git
          cd gocv
          make install
          cd ../

      # 构建项目
      - name: Build project
        run: go build

      # 运行测试
      - name: Run tests
        run: go test -timeout 30s -run ^TestFullyRun$ github.com/hootrhino/rhilex/test -v -count=1